{"version":3,"sources":["Components/App/index.js","index.js","Components/App/style.js"],"names":["Menu","setCurrentRef","reference","URLSearchParams","useLocation","search","get","React","useEffect","invoices","last_invoice","i","localStorage","length","itemName","key","startsWith","push","substr","JSON","parse","getItem","onClick","className","map","name","clear","JsonEditor","useState","generateButton","setGenerateButton","generateState","setGenerateState","refItem","InvoiceView","attrs","mode","theme","value","onChange","data","width","height","jsoned","setItem","generateStart","total","setTimeout","window","print","color2","color","rgba","date","factureby","infos","info","k","factureto","entitled","tr","f","v","parseInt","undefined","totalFormula","eval","td","j","res","formula","next","message","Object","keys","App","currentRef","ReactDOM","render","document","getElementById","MenuContainer","styled","div","JsonEditorContainer","CButton","button","InvoiceViewContainer","props"],"mappings":"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","file":"static/js/main.3895ef4e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\nimport rgba from 'color-rgba';\r\n\r\nimport AceEditor from 'react-ace';\r\nimport \"ace-builds/src-noconflict/mode-json\";\r\nimport \"ace-builds/src-noconflict/theme-github\";\r\n\r\nimport {\r\n    MenuContainer,\r\n    JsonEditorContainer,\r\n    InvoiceViewContainer,\r\n    CButton\r\n} from './style';\r\n\r\nexport const Menu = ({ setCurrentRef }) => {\r\n\r\n    const reference = (new URLSearchParams(useLocation().search)).get(\"r\");\r\n\r\n    React.useEffect(() => {\r\n        if (reference)\r\n            setCurrentRef(reference);\r\n    });\r\n\r\n    let invoices = [];\r\n    let last_invoice = null;\r\n    for (let i = 0; i < localStorage.length; ++i) {\r\n        const itemName = localStorage.key(i);\r\n        if (itemName.startsWith(\"facture-gen-\"))\r\n            invoices.push(itemName.substr(12));\r\n        else if (itemName === \"last-facture-gen\")\r\n            last_invoice = JSON.parse(localStorage.getItem(\"last-facture-gen\")).reference;\r\n    }\r\n\r\n    return (\r\n        <MenuContainer>\r\n            <CButton onClick={() => setCurrentRef(\"\")}>New Invoice</CButton>\r\n            <div className=\"invoices\">\r\n                <p className=\"title0\">Last</p>\r\n                {last_invoice ? <button className=\"invoice\" onClick={() => setCurrentRef(last_invoice)}>{last_invoice}</button> : null}\r\n                <p className=\"title1\">Saved</p>\r\n                <div className=\"list\">\r\n                    {invoices.map((name, i) => (\r\n                        <button key={i} className=\"invoice\" onClick={() => setCurrentRef(name)}>{name}</button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <button className=\"clear\" onClick={() => localStorage.clear()}>CLEAR SAVED</button>\r\n        </MenuContainer>\r\n    );\r\n};\r\n\r\nexport const JsonEditor = ({ reference }) => {\r\n    const [ generateButton, setGenerateButton ] = React.useState(false);\r\n    const [ generateState, setGenerateState ]  = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        let refItem = null;\r\n        if (!reference || reference === \"\")\r\n        {\r\n            refItem = \r\n`{\r\n    \"reference\": \"\",\r\n    \"date\": \"\",\r\n            \r\n    \"factureby\": {    \r\n        \"name\": \"\",\r\n        \"infos\": []\r\n    },\r\n            \r\n    \"factureto\": {\r\n        \"name\": \"\",\r\n        \"infos\": []\r\n    },\r\n            \r\n    \"entitled\": \"\",\r\n    \"totalFormula\": \"\",\r\n    \"invoices\": [],\r\n    \"message\": \"\",\r\n    \"infos\": {}\r\n}`;\r\n        }\r\n        else\r\n        {\r\n            refItem = localStorage.getItem(\"facture-gen-\" + reference);\r\n            if (!refItem)\r\n                return;\r\n        }\r\n        setGenerateState(refItem);\r\n    }, []);\r\n\r\n    const generateStart = () => {\r\n        const jsoned = JSON.parse(generateState);\r\n\r\n        if (!jsoned || !jsoned.reference || jsoned.reference === \"\")\r\n            return ;\r\n\r\n        localStorage.setItem(\"facture-gen-\" + jsoned.reference, generateState);\r\n        localStorage.setItem(\"last-facture-gen\", generateState);\r\n        setGenerateButton(true);\r\n        setGenerateState(jsoned);\r\n    }\r\n\r\n    return (\r\n        generateButton\r\n        ?\r\n        <InvoiceView attrs={generateState} />\r\n        :\r\n        <JsonEditorContainer>\r\n            <div className=\"textarea\">\r\n                <AceEditor\r\n                    mode=\"json\"\r\n                    theme=\"github\"\r\n                    value={generateState}\r\n                    onChange={(data) => setGenerateState(data)}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                />\r\n            </div>\r\n            <CButton onClick={() => generateStart()}>Generate</CButton>\r\n        </JsonEditorContainer>\r\n    )\r\n};\r\n\r\nconst InvoiceView = ({ attrs }) => {\r\n    var total = 0;\r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => window.print(), 500);\r\n    }, []);\r\n\r\n    let color2 = attrs.color2;\r\n    if (attrs.color && !attrs.color2) {\r\n        color2 = rgba(attrs.color);\r\n        color2 = `rgba(${color2[0]}, ${color2[1]}, ${color2[2]}, 0.1)`;\r\n    }\r\n\r\n    return (\r\n        <InvoiceViewContainer color={attrs.color || \"var(--blue)\"} color2={color2 ||  \"var(--blue2)\"}>\r\n            <div className=\"container\">  \r\n                <div className=\"header\">\r\n                    <div className=\"top\">\r\n                        <p className=\"title\">FACTURE</p>\r\n                        <p className=\"ref\">N° {attrs.reference}</p>\r\n                        <p className=\"date\">{attrs.date}</p>\r\n                    </div>\r\n                    <div className=\"facturer\">\r\n                        <div className=\"by\">Facturé par</div>\r\n                        <div className=\"name\">{attrs.factureby.name}</div>\r\n                        {attrs.factureby.infos.map((info, k) =>\r\n                            <div className=\"info\" key={k}>{info}</div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"body\">\r\n                    <div className=\"factured\">\r\n                        <div className=\"by\">Facturé à</div>\r\n                        <div className=\"name\">{attrs.factureto.name}</div>\r\n                        {attrs.factureto.infos.map((info, k) =>\r\n                            <div className=\"info\" key={k}>{info}</div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"amounts\">\r\n                    <p className=\"titled\">{attrs.entitled}</p>\r\n                    <table className=\"table\">\r\n                        {attrs.invoices.map((tr, i) => {\r\n                            const f = tr.map(v => parseInt(v));\r\n                            if (i !== 0 && attrs.totalFormula !== undefined)\r\n                                eval(attrs.totalFormula);\r\n\r\n                            return <tr key={i} className={i === 0 ? \"titles\" : \"field\"}>\r\n                                {tr.map((td, j) => {\r\n                                    var res = td;\r\n                                    if (typeof td == \"object\")\r\n                                        res = eval(res.formula) + td.next;\r\n\r\n                                    return <td key={j}>{res}</td>\r\n                                })}\r\n                            </tr>\r\n                        })}\r\n                    </table>\r\n                    <div className=\"total\">\r\n                        <p className=\"text\">Total Hors Taxe</p>\r\n                        <p className=\"amount\">{total} €</p>\r\n                    </div>\r\n                    <p className=\"tvanon\">TVA non applicable – article 293 B du CGI</p>\r\n                </div>\r\n\r\n                <div className=\"message\">{attrs.message}</div>\r\n\r\n                <div className=\"bank\">\r\n                    <p className=\"title\">Coordonnées</p>\r\n                    {Object.keys(attrs.infos).map((name, i) => \r\n                        <div className=\"group\">\r\n                            <p className=\"title\">{name}</p>\r\n                            <p className=\"value\">{attrs.infos[name]}</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n        </InvoiceViewContainer>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { Menu, JsonEditor } from './Components/App';\n\nconst App = () => {\n  const [ currentRef, setCurrentRef ] = React.useState(null);\n\n  return (\n    <BrowserRouter>\n      {\n        currentRef === null ? <Menu setCurrentRef={setCurrentRef} />\n                            : <JsonEditor reference={currentRef} />\n      }\n    </BrowserRouter>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n","import styled from 'styled-components';\r\n\r\nexport const MenuContainer = styled.div`\r\n    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;400;500;600;700;900&display=swap');\r\n    font-family: Poppins;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n\r\n    p {\r\n        margin-block-start: 0px;\r\n        margin-block-end: 0px;\r\n    }\r\n\r\n    .invoices {\r\n        flex: 1;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        .no {\r\n            color: var(--grey2);\r\n        }\r\n\r\n        .list {\r\n                display: flex;\r\n                flex-direction: column;\r\n            }\r\n\r\n        .invoice {\r\n            cursor: pointer;\r\n            border: none;\r\n            background-color: transparent;\r\n            outline: none;\r\n            font-family: inherit;\r\n            font-size: 20px;\r\n        }\r\n    }\r\n\r\n    .clear {\r\n        font-family: inherit;\r\n        border: none;\r\n        outline: none;\r\n        padding: 20px;\r\n    }\r\n\r\n`;\r\n\r\nexport const JsonEditorContainer = styled.div`\r\n    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;400;500;600;700;900&display=swap');\r\n    font-family: Poppins;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n\r\n    .textarea {\r\n        flex: 1;\r\n    }\r\n`;\r\n\r\nexport const CButton = styled.button`\r\n    background-color: var(--blue);\r\n    color: white;\r\n    font-family: Poppins;\r\n    font-size: 20px;\r\n    border: none;\r\n    outline: none;\r\n    padding: 20px;\r\n`;\r\n\r\nexport const InvoiceViewContainer = styled.div`\r\n    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;400;500;600;700;900&display=swap');\r\n    -webkit-print-color-adjust: exact;\r\n    font-family: \"Poppins\";\r\n    height: 100%;\r\n\r\n    --default: ${props => props.color};\r\n    --default2: ${props => props.color2};\r\n\r\n    p {\r\n        margin-block-start: 0px;\r\n        margin-block-end: 0px;\r\n    }\r\n\r\n    .container {\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        margin-left: 30px;\r\n        margin-right: 30px;\r\n\r\n        .by {\r\n            color: var(--default);\r\n            background-color: var(--grey1);\r\n            border-radius: 10px;\r\n            padding-left: 10px;\r\n            padding-right: 10px;\r\n        }\r\n\r\n        .header {\r\n            display: flex;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n\r\n            /* background-color: #638AE6; */\r\n            color: black;\r\n            font-weight: 300;\r\n            border-radius: 15px;\r\n            padding: 10px;\r\n            /* margin-bottom: 50px; */\r\n\r\n            .top {\r\n                font-size: 18px;\r\n                color: var(--grey2);\r\n                .title {\r\n                    color: black;\r\n                    font-size: 48px;\r\n                    letter-spacing: 11px;\r\n                    font-weight: 400;\r\n                }\r\n            }\r\n\r\n            .facturer {\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: flex-end;\r\n                color: var(--grey2);\r\n\r\n                font-size: 12px;\r\n\r\n                .name {\r\n                    color: black;\r\n                    font-size: 18px;\r\n                    font-weight: 400;\r\n                }\r\n            }\r\n        }\r\n\r\n        .body {\r\n            display: flex;\r\n            flex-direction: column;\r\n            /* margin-bottom: 50px; */\r\n\r\n            .factured {\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: flex-end;\r\n    \r\n                color: var(--grey2);\r\n                font-weight: 300;\r\n                font-size: 12px;\r\n                align-self: flex-end;\r\n\r\n    \r\n                .name {\r\n                    color: black;\r\n                    font-size: 18px;\r\n                    font-weight: 400;\r\n                }\r\n            }\r\n\r\n        }\r\n        \r\n        .amounts {\r\n            display: flex;\r\n            flex-direction: column;\r\n            /* margin-bottom: 50px; */\r\n\r\n            .titled {\r\n                color: var(--grey2);\r\n            }\r\n\r\n            .table {\r\n    \r\n                border-spacing: 0px;\r\n                border-collapse: collapse;\r\n                /* background-color: transparent; */\r\n                border-radius: 10px;\r\n                margin-bottom: 50px;\r\n                /* text-align: center; */\r\n    \r\n                td {\r\n                    padding: 10px;\r\n                    padding-top: 5px;\r\n                    padding-bottom: 5px;\r\n                }\r\n    \r\n                .field {\r\n                    color: var(--grey2);\r\n                    font-weight: 300;\r\n                    text-align: left;\r\n                    font-size: 12px;\r\n                }\r\n    \r\n                .field:last-of-type {\r\n                    border-bottom: 1px var(--grey1) solid;\r\n                }\r\n    \r\n                .field:nth-child(odd) {\r\n                    background-color: var(--default2);\r\n                }\r\n    \r\n                .titles {\r\n                    background-color: var(--default);\r\n                    color: white;\r\n                    text-transform: uppercase;\r\n                    font-size: 12px;\r\n                }\r\n    \r\n                .titles td:first-child {\r\n                    border-top-left-radius: 10px;\r\n                    border-bottom-left-radius: 10px;\r\n                }\r\n    \r\n                .titles td:last-child {\r\n                    border-top-right-radius: 10px;\r\n                    border-bottom-right-radius: 10px;\r\n                }\r\n    \r\n            }\r\n\r\n            .total {\r\n                align-self: flex-end;\r\n\r\n                display: flex;\r\n                flex-direction: row;\r\n                justify-content: space-between;\r\n                background-color: var(--default2);\r\n                border-radius: 10px;\r\n                font-weight: 400;\r\n                padding: 10px;\r\n\r\n                .text {\r\n                    color: var(--default);\r\n                    margin-right: 10px;\r\n                }\r\n            }\r\n\r\n            .tvanon {\r\n                align-self: flex-end;\r\n                font-size: 10px;\r\n                color: var(--grey2);\r\n            }\r\n        }\r\n\r\n        .message {\r\n            /* margin-bottom: 50px; */\r\n            color: var(--grey2);\r\n        }\r\n\r\n        .bank {\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: center;\r\n            background-color: var(--default2);\r\n            border-radius: 10px;\r\n            padding: 10px;\r\n\r\n            .title {\r\n                color: black;\r\n            }\r\n\r\n            .group {\r\n                display: flex;\r\n                flex-direction: row;\r\n\r\n                .title {\r\n                    color: var(--default);\r\n                    margin-right: 5px;\r\n                }\r\n\r\n                .value {\r\n                    color: var(--grey2);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;"],"sourceRoot":""}